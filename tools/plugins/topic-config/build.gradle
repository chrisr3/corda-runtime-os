plugins {
    id 'distribution'
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.kotlin.kapt'
    id 'corda.cli-plugin-packager'
}

ext {
    releasable = false
}

group 'net.corda.cli.deployment'

dependencies {
    compileOnly 'org.jetbrains.kotlin:kotlin-stdlib'
    compileOnly libs.jackson.module
    compileOnly libs.jackson.dataformat

    compileOnly libs.pf4j
    compileOnly "net.corda.cli.host:api:$pluginHostVersion"
    kapt libs.pf4j
    kapt libs.picocli

    compileOnly platform("net.corda:corda-api:$cordaApiVersion")
    implementation "net.corda:corda-topic-schema:$cordaApiVersion"
    compileOnly libs.kafka.clients

    testImplementation 'org.jetbrains.kotlin:kotlin-stdlib'
    testImplementation libs.mockito.core
    testImplementation libs.mockito.kotlin
    testImplementation libs.pf4j
    testImplementation "net.corda.cli.host:api:$pluginHostVersion"
    testImplementation libs.jackson.module
    testImplementation libs.jackson.dataformat
    testImplementation libs.kafka.clients
}

cliPlugin {
    cliPluginClass = 'net.corda.cli.plugins.topicconfig.TopicPlugin'
    cliPluginDescription = 'Plugin for creating and deleting topics and ACLs.'
}

tasks.named("installDist") {
    dependsOn cliPlugin
    def homePath = System.properties['user.home']
    from cliPlugin
    into "$homePath/.corda/cli/plugins"
}
