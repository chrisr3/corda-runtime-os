# Override file suitable for local deployment of the Corda Helm chart against version 0.1.0 of the corda-dev prereqs Helm chart.
#
# First use `./gradlew publishOSGiImage --parallel` to create local docker images
# Then deploy using:
#
#  helm upgrade --install corda -n corda \
#  charts/corda \
#  --values values.yaml \
#  --values debug.yaml \
#  --wait
#
# See `debug.yaml` for debug settings.
#
# NOTE: The below assumes you deploy Kafka and the PostgreSQL database in the same namespace, so that domain names containing just the service name are resolved (i.e. prereqs-postgresql instead of prereqs-postgresql.<namespace>)
#       If that is not the case, you might need to add the namespace as a suffix.
imagePullPolicy: "IfNotPresent"
image:
  registry: "corda-os-docker-dev.software.r3.com"
  tag: "latest-local"
imagePullSecrets:
  - docker-registry-cred
logging:
  format: "text"
  level: "info"

bootstrap:
  restApiAdmin:
    password:
      value: "admin"
  db:
    cluster:
      password:
        valueFrom:
          secretKeyRef:
            name: "prereqs-postgresql"
            key: "postgres-password"
      username:
        value: "postgres"
  kafka:
    replicas: 1

kafka:
  bootstrapServers: "prereqs-kafka:9092"
  sasl:
    enabled: true
    username:
      value: "user"
    password:
      valueFrom:
        secretKeyRef:
          name: "prereqs-kafka-jaas"
          key: "client-passwords"
  tls:
    enabled: true
    truststore:
      valueFrom:
        secretKeyRef:
          name: "prereqs-kafka-0-tls"
          key: "ca.crt"

db:
  cluster:
    host: "prereqs-postgresql"
    password:
      valueFrom:
        secretKeyRef:
          name: "prereqs-postgresql"
          key: "password"
    username:
      value: "user"


workers:
  flow:
    replicaCount: 1
    extraArgs:
      - "-Ptype=DURABLE"
      - "-Pcount=1"
      - "-PoutputRecordSize=MEDIUM"
      - "-PoutputRecordCount=2"
  crypto:
    replicaCount: 0
  db:
    replicaCount: 0
  membership:
    replicaCount: 2
    extraArgs:
      - "-Pcount=10000"
      - "-PoutputRecordCount=1000"
      - "-PoutputRecordSize=MEDIUM"
  rest:
    replicaCount: 0
  p2pLinkManager:
    replicaCount: 0
  p2pGateway:
    replicaCount: 0

tolerations:
  - key: "node"
    effect: "NoSchedule"
    value: "corda"
nodeSelector: { node: "corda" }

metrics:
  podMonitor:
    enabled: true
    labels:
      release: observability